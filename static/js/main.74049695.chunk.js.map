{"version":3,"sources":["utils.js","WebAPI.js","redux/reducers/userReducer.js","pages/LoginPage/LoginPage.js","redux/reducers/postReducer.js","pages/HomePage/HomePage.js","pages/RegisterPage/RegisterPage.js","pages/AboutPage/AboutPage.js","pages/SinglePage/SinglePage.js","pages/NewPostPage/NewPostPage.js","pages/EditPostPage/EditPostPage.js","components/Header/Header.js","components/App/App.js","redux/store.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getMe","fetch","headers","authorization","then","res","json","userReducer","createSlice","name","initialState","isLoadingUser","user","errorMessage","reducers","setIsLoadingUser","state","action","payload","setUser","setErrorMessage","actions","getUser","dispatch","ok","data","login","username","password","method","body","JSON","stringify","loginAPI","toString","message","register","nickname","registerAPI","ErrorMessage","styled","div","Form","form","Input","input","Button","button","LoginPage","useSelector","store","users","useState","setUsername","setPassword","history","useHistory","useDispatch","onSubmit","e","preventDefault","push","value","onChange","target","type","postReducer","isLoadingPost","post","posts","totoalCount","newPostResponse","setIsLoadingPost","setPost","setPosts","setTotalCount","setNewPostResponse","getPost","id","getPostAPI","catch","err","console","log","pagingPosts","page","limit","pagingPostsAPI","getPostsCount","length","newPost","title","createPost","editPost","editPostAPI","removePost","removePostAPI","Root","PostWrapper","PostContainer","PostTitle","Link","PostDate","Pagination","PaginationButton","props","$active","theme","colors","primary_blue","Post","to","Date","createdAt","toLocaleString","HomePage","currentPage","setCurrentPage","pages","useEffect","Math","ceil","i","map","onClick","handlePageClick","setNickname","About","AboutPage","ButtonGroup","DeleteButton","EditButton","PostHeader","PostInfo","PostBody","Loading","onDelete","onUpdate","userId","SinglePage","useParams","isLoading","Textarea","textarea","NewPostPage","setTitle","content","setContent","cols","rows","EditPostPage","trim","HeaderContainer","Brand","NavbarList","Nav","LeftContainer","Header","location","useLocation","pathname","App","exact","path","configureStore","reducer","ReactDOM","render","primary_300","primary_400","primary_500","document","getElementById"],"mappings":"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","file":"static/js/main.74049695.chunk.js","sourcesContent":["const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};\n","import { getAuthToken } from \"./utils\";\n\nconst BASE_URL = \"https://immense-castle-71210.herokuapp.com\";\n\nexport const pagingPosts = (page, limit) => {\n  return fetch(\n    `${BASE_URL}/posts?_sort=createdAt&_order=desc&_page=${page}&_limit=${limit}`\n  ).then((res) => res.json());\n};\n\nexport const getPosts = () => {\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\n    res.json()\n  );\n};\n\nexport const getPost = (id) => {\n  return fetch(`${BASE_URL}/posts/${id}`).then((res) => res.json());\n};\n\nexport const createPost = (title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({ title, body }),\n  }).then((res) => res.json());\n};\n\nexport const removePost = (id) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nexport const register = (username, nickname, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      nickname,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const editPost = (id, title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  getMe,\n  login as loginAPI,\n  register as registerAPI,\n} from \"../../WebAPI\";\nimport { setAuthToken, getAuthToken } from \"../../utils\";\n\nexport const userReducer = createSlice({\n  name: \"users\",\n  initialState: {\n    isLoadingUser: false,\n    user: null,\n    errorMessage: null,\n  },\n  reducers: {\n    setIsLoadingUser: (state, action) => {\n      state.isLoadingUser = action.payload;\n    },\n    setUser: (state, action) => {\n      state.user = action.payload;\n    },\n    setErrorMessage: (state, action) => {\n      state.errorMessage = action.payload;\n    },\n  },\n});\n\nexport const {\n  setIsLoadingUser,\n  setUser,\n  setErrorMessage,\n} = userReducer.actions;\n\nexport const getUser = () => (dispatch) => {\n  dispatch(setIsLoadingUser(true));\n  if (getAuthToken()) {\n    return getMe().then((res) => {\n      dispatch(setIsLoadingUser(false));\n      if (res.ok !== 1) {\n        setAuthToken(null);\n        return;\n      }\n      dispatch(setUser(res.data));\n      return res.data;\n    });\n  }\n};\n\nexport const login = (username, password) => (dispatch) => {\n  return loginAPI(username, password).then((data) => {\n    if (data.ok === 0) {\n      dispatch(setErrorMessage(data.message));\n      return;\n    }\n    setAuthToken(data.token);\n    return getMe().then((res) => {\n      if (res.ok !== 1) {\n        setAuthToken(null);\n        dispatch(setErrorMessage(res.toString()));\n        return;\n      }\n      dispatch(setUser(res.data));\n      return res;\n    });\n  });\n};\n\nexport const register = (username, nickname, password) => (dispatch) => {\n  return registerAPI(username, nickname, password).then((data) => {\n    if (data.ok === 0) {\n      dispatch(setErrorMessage(data.message));\n      return;\n    }\n    setAuthToken(data.token);\n    return getMe().then((res) => {\n      if (res.ok !== 1) {\n        dispatch(setErrorMessage(res.toString()));\n        return;\n      }\n      dispatch(setUser(res.data));\n      return res;\n    });\n  });\n};\nexport default userReducer.reducer;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { login, setErrorMessage } from \"../../redux/reducers/userReducer\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst Form = styled.form`\n  text-align: center;\n  border: 5px solid #ec8c9b;\n  width: 500px;\n  margin: 60px auto 0;\n  padding: 30px 0;\n  border-radius: 3px;\n`;\n\nconst Input = styled.input`\n  margin: 10px 0;\n  width: 200px;\n  height: 25px;\n  border-radius: 3px;\n  border: 1px solid #8ce7ec;\n`;\n\nconst Button = styled.button`\n  margin-top: 20px;\n  cursor: pointer;\n  width: 200px;\n  height: 30px;\n  border-radius: 5px;\n  border: 1px solid transparent;\n  background-color: #8ce7ec;\n  :hover {\n    background-color: #000000de;\n    border: 1px solid transparent;\n    border-radius: 5px;\n    color: #ec8c9b;\n  }\n`;\n\nexport default function LoginPage() {\n  const errorMessage = useSelector((store) => store.users.errorMessage);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrorMessage(null);\n    dispatch(login(username, password)).then((res) => {\n      if (res) {\n        history.push(\"/\");\n      }\n    });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div>\n        username:{\" \"}\n        <Input value={username} onChange={(e) => setUsername(e.target.value)} />\n      </div>\n      <div>\n        password:{\" \"}\n        <Input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n      <Button>登入</Button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </Form>\n  );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  getPost as getPostAPI,\n  getPosts,\n  pagingPosts as pagingPostsAPI,\n  removePost as removePostAPI,\n  editPost as editPostAPI,\n  createPost,\n} from \"../../WebAPI\";\n\nexport const postReducer = createSlice({\n  name: \"posts\",\n  initialState: {\n    isLoadingPost: false,\n    post: null,\n    posts: [],\n    totoalCount: null,\n    errorMessage: null,\n    newPostResponse: null,\n  },\n  reducers: {\n    setIsLoadingPost: (state, action) => {\n      state.isLoadingPost = action.payload;\n    },\n    setPost: (state, action) => {\n      state.post = action.payload;\n    },\n    setPosts: (state, action) => {\n      state.posts = action.payload;\n    },\n    setTotalCount: (state, action) => {\n      state.totoalCount = action.payload;\n    },\n    setErrorMessage: (state, action) => {\n      state.errorMessage = action.payload;\n    },\n    setNewPostResponse: (state, action) => {\n      state.newPostResponse = action.payload;\n    },\n  },\n});\n\nexport const {\n  setIsLoadingPost,\n  setPost,\n  setPosts,\n  setTotalCount,\n  setErrorMessage,\n  setNewPostResponse,\n} = postReducer.actions;\n\nexport const getPost = (id) => (dispatch) => {\n  dispatch(setIsLoadingPost(true));\n  getPostAPI(id)\n    .then((res) => {\n      dispatch(setPost(res));\n      dispatch(setIsLoadingPost(false));\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const pagingPosts = (page, limit) => (dispatch) => {\n  pagingPostsAPI(page, limit)\n    .then((res) => {\n      dispatch(setPosts(res));\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const getPostsCount = () => (dispatch) => {\n  getPosts()\n    .then((res) => {\n      dispatch(setTotalCount(res.length));\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const newPost = (title, body) => (dispatch) => {\n  return createPost(title, body).then((res) => {\n    dispatch(setNewPostResponse(res));\n    return res;\n  });\n};\n\nexport const editPost = (id, title, body) => (dispatch) => {\n  return editPostAPI(id, title, body).then((res) => {\n    dispatch(setNewPostResponse(res));\n    return res;\n  });\n};\n\nexport const removePost = (id) => () => {\n  return removePostAPI(id).then((res) => res);\n};\n\nexport default postReducer.reducer;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { pagingPosts, getPostsCount } from \"../../redux/reducers/postReducer\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 15px auto;\n`;\n\nconst PostWrapper = styled.div`\n  height: 70vh;\n`;\n\nconst PostContainer = styled.div`\n  border-bottom: 1px solid #f09fac;\n  padding: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  color: #333;\n  text-decoration: none;\n  width: 80%;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nconst Pagination = styled.div`\n  margin: 30px 0;\n  text-align: center;\n`;\n\nconst PaginationButton = styled.button`\n  cursor: pointer;\n  width: 150px;\n  height: 30px;\n  border-radius: 5px;\n  border: 1px solid transparent;\n  background-color: pink;\n\n  & + & {\n    margin-left: 5px;\n  }\n  :hover {\n    background-color: #000000de;\n    border: 1px solid transparent;\n    border-radius: 5px;\n    color: #ec8c9b;\n  }\n\n  ${(props) =>\n    props.$active &&\n    `\n    background: ${props.theme.colors.primary_blue} ;\n  `}\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function HomePage() {\n  const dispatch = useDispatch();\n  const [currentPage, setCurrentPage] = useState(\"1\");\n  const totoalCount = useSelector((store) => store.posts.totoalCount);\n  const posts = useSelector((store) => store.posts.posts);\n  const pages = [];\n  const limit = 5;\n\n  useEffect(() => {\n    dispatch(getPostsCount());\n    dispatch(pagingPosts(currentPage, limit));\n  }, [dispatch, currentPage]);\n\n  const length = Math.ceil(totoalCount / limit);\n  for (let i = 1; i <= length; i++) {\n    pages.push(i);\n  }\n\n  const handlePageClick = (page) => {\n    setCurrentPage(page);\n  };\n  return (\n    <Root>\n      <PostWrapper>\n        {posts.map((post) => (\n          <Post key={post.id} post={post} />\n        ))}\n      </PostWrapper>\n      <Pagination>\n        {pages.map((page) => (\n          <PaginationButton\n            key={page}\n            $active={page === currentPage}\n            onClick={() => handlePageClick(page)}\n          >\n            {page}\n          </PaginationButton>\n        ))}\n      </Pagination>\n    </Root>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { register, setErrorMessage } from \"../../redux/reducers/userReducer\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst Form = styled.form`\n  text-align: center;\n  border: 5px solid #ec8c9b;\n  width: 500px;\n  margin: 60px auto 0;\n  padding: 30px 0;\n  border-radius: 3px;\n`;\n\nconst Input = styled.input`\n  margin: 10px 0;\n  width: 200px;\n  height: 25px;\n  border-radius: 3px;\n  border: 1px solid #8ce7ec;\n`;\n\nconst Button = styled.button`\n  margin-top: 20px;\n  cursor: pointer;\n  width: 200px;\n  height: 30px;\n  border-radius: 5px;\n  border: 1px solid transparent;\n  background-color: #8ce7ec;\n  :hover {\n    background-color: #000000de;\n    border: 1px solid transparent;\n    border-radius: 5px;\n    color: #ec8c9b;\n  }\n`;\n\nexport default function LoginPage() {\n  const [username, setUsername] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const errorMessage = useSelector((store) => store.users.errorMessage);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(setErrorMessage(null)), [dispatch]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(register(username, nickname, password));\n    dispatch(register(username, nickname, password)).then((res) => {\n      if (res) {\n        history.push(\"/\");\n      }\n    });\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div>\n        username:{\" \"}\n        <Input value={username} onChange={(e) => setUsername(e.target.value)} />\n      </div>\n      <div>\n        nickname:{\" \"}\n        <Input value={nickname} onChange={(e) => setNickname(e.target.value)} />\n      </div>\n      <div>\n        password:{\" \"}\n        <Input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n      <Button>註冊</Button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </Form>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Root = styled.div`\n  width: 60%;\n  margin: 10px auto;\n`;\n\nconst About = styled.div`\n  font-size: 20px;\n  margin: 25px;\n`;\n\nexport default function AboutPage() {\n  return (\n    <Root>\n      <About>\n        第一個 React 技術部落格，小小菜鳥，請各位多多指教!\n        此部落格記載著，學習過程的心血，從完全不熟程式語言，到能自己創建一個部落格，是一個起始點！一步一腳印地，踏出程式大道～！\n      </About>\n    </Root>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { getPost, removePost } from \"../../redux/reducers/postReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst Root = styled.div``;\n\nconst PostContainer = styled.div`\n  width: 80%;\n  margin: 40px auto;\n  border-bottom: 1px solid #f09fac;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst DeleteButton = styled.button`\n  width: 90px;\n  height: 40px;\n  cursor: pointer;\n  background: aliceblue;\n  border: 1px solid lightblue;\n  padding: 10px 0;\n  border-radius: 5px;\n  margin-left: 15px;\n\n  &:hover {\n    background: #ff45009c;\n    border: 1px solid #ff45009c;\n  }\n`;\n\nconst EditButton = styled.button`\n  width: 90px;\n  height: 40px;\n  cursor: pointer;\n  background: aliceblue;\n  border: 1px solid lightblue;\n  padding: 10px 0;\n  border-radius: 5px;\n  &:hover {\n    background: #9ff95f;\n    border: 1px solid #9ff95f;\n  }\n`;\n\nconst PostHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 25px 0;\n  font-weight: bold;\n`;\n\nconst PostInfo = styled.div`\n  width: 80%;\n`;\n\nconst PostTitle = styled.div`\n  font-size: 34px;\n  color: #333;\n  text-decoration: none;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.4);\n  margin-top: 12px;\n`;\n\nconst PostBody = styled.div`\n  color: rgba(0, 0, 0, 1);\n  white-space: pre-line;\n  margin-top: 20px;\n`;\n\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: black;\n  font-size: 24px;\n  background: rgba(0, 0, 0, 0.4);\n`;\n\nfunction Post({ post, onDelete, onUpdate }) {\n  const user = useSelector((store) => store.users.user);\n  if (!post) return null;\n  return (\n    <div>\n      {post && (\n        <PostContainer>\n          <PostHeader>\n            <PostInfo>\n              <PostTitle>{post.title}</PostTitle>\n              <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n            </PostInfo>\n            {user && user.id === post.userId && (\n              <ButtonGroup>\n                <EditButton onClick={onUpdate}>編輯</EditButton>\n                <DeleteButton onClick={onDelete}>刪除</DeleteButton>\n              </ButtonGroup>\n            )}\n          </PostHeader>\n          <PostBody>{post.body}</PostBody>\n        </PostContainer>\n      )}\n    </div>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function SinglePage() {\n  let { id } = useParams();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isLoading = useSelector((store) => store.posts.isLoadingPost);\n  const post = useSelector((store) => store.posts.post);\n\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [id, dispatch]);\n\n  const handleDelete = () => {\n    dispatch(removePost(id)).then(() => history.push(\"/\"));\n  };\n  const handleUpdate = () => {\n    history.push(`/edit/${id}`);\n  };\n  return (\n    <Root>\n      <Post post={post} onDelete={handleDelete} onUpdate={handleUpdate} />\n      {isLoading && <Loading>載入中</Loading>}\n    </Root>\n  );\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { newPost } from \"../../redux/reducers/postReducer\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\nconst Form = styled.div`\n  text-align: center;\n  margin-top: 30px;\n`;\nconst Input = styled.input`\n  width: 400px;\n  height: 30px;\n  border: 1px solid #f09fac;\n  border-radius: 3px;\n`;\n\nconst Textarea = styled.textarea`\n  margin: 10px 0;\n  border: 1px solid #f09fac;\n  border-radius: 3px;\n`;\n\nconst Button = styled.button`\n  background-color: pink;\n  border: 1px solid transparent;\n  border-radius: 5px;\n  width: 300px;\n  height: 35px;\n  cursor: pointer;\n  :hover {\n    background-color: #000000de;\n    border: 1px solid transparent;\n    border-radius: 5px;\n    color: #ec8c9b;\n  }\n`;\n\nexport default function NewPostPage() {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(newPost(title, content)).then((newPostResponse) => {\n      if (newPostResponse && newPostResponse.id) {\n        history.push(\"/posts/\" + newPostResponse.id);\n      }\n    });\n  };\n\n  return (\n    <Form>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      <div>\n        標題: <Input value={title} onChange={(e) => setTitle(e.target.value)} />\n      </div>\n      <div>\n        <Textarea\n          cols=\"55\"\n          rows=\"20\"\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n        />\n      </div>\n      <Button onClick={handleSubmit}>送出</Button>\n    </Form>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  getPost,\n  setPost,\n  editPost,\n  setErrorMessage,\n} from \"../../redux/reducers/postReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\nconst Form = styled.form`\n  text-align: center;\n  margin-top: 30px;\n`;\nconst Input = styled.input`\n  width: 400px;\n  height: 30px;\n  border: 1px solid #f09fac;\n  border-radius: 3px;\n`;\n\nconst Textarea = styled.textarea`\n  margin: 10px 0;\n  border: 1px solid #f09fac;\n  border-radius: 3px;\n`;\n\nconst Button = styled.button`\n  background-color: pink;\n  border: 1px solid transparent;\n  border-radius: 5px;\n  width: 300px;\n  height: 35px;\n  cursor: pointer;\n  :hover {\n    background-color: #000000de;\n    border: 1px solid transparent;\n    border-radius: 5px;\n    color: #ec8c9b;\n  }\n`;\n\nexport default function EditPostPage() {\n  const post = useSelector((store) => store.posts.post);\n  const [title, setTitle] = useState(post.title);\n  const [content, setContent] = useState(post.body);\n  const errorMessage = useSelector((store) => store.posts.errorMessage);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const isLoading = useSelector((store) => store.posts.isLoadingPost);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!title || !content || title.trim() === \"\" || content.trim() === \"\") {\n      return dispatch(setErrorMessage(\"標題或內容不能空白\"));\n    }\n    dispatch(editPost(id, title, content)).then((newPostResponse) => {\n      if (newPostResponse && newPostResponse.id) {\n        history.push(`/post/${newPostResponse.id}`);\n      }\n    });\n  };\n\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [id, dispatch]);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      <div>\n        標題: <Input value={title} onChange={(e) => setTitle(e.target.value)} />\n      </div>\n      <div>\n        <Textarea\n          cols=\"55\"\n          rows=\"20\"\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n        />\n      </div>\n      <Button>更新</Button>\n    </Form>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { setAuthToken } from \"../../utils\";\nimport { setUser } from \"../../redux/reducers/userReducer\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst HeaderContainer = styled.div`\n  height: 64px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  border-bottom: 1px solid #f09fac;\n  padding: 0 32px;\n  box-sizing: border-box;\n  background-color: white;\n`;\n\nconst Brand = styled.div`\n  font-size: 32px;\n  font-weight: bold;\n`;\n\nconst NavbarList = styled.div`\n  display: flex;\n  align-items: center;\n  height: 64px;\n`;\n\nconst Nav = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 100px;\n  box-sizing: border-box;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n\n  ${(props) =>\n    props.$active &&\n    `\n    background: #f8ccd3\n  `}\n`;\n\nconst LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${NavbarList} {\n    margin-left: 64px;\n  }\n`;\n\nexport default function Header() {\n  const location = useLocation();\n  const history = useHistory();\n  const user = useSelector((store) => store.users.user);\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    setAuthToken(\"\");\n    dispatch(setUser(null));\n    if (location.pathname !== \"/\") {\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <HeaderContainer>\n      <LeftContainer>\n        <Brand>Miao Blog</Brand>\n        <NavbarList>\n          <Nav to=\"/\" $active={location.pathname === \"/\"}>\n            首頁\n          </Nav>\n          <Nav to=\"/about\" $active={location.pathname === \"/about\"}>\n            關於我\n          </Nav>\n          {user && (\n            <Nav to=\"/new-post\" $active={location.pathname === \"/new-post\"}>\n              發布文章\n            </Nav>\n          )}\n        </NavbarList>\n      </LeftContainer>\n      <NavbarList>\n        {!user && (\n          <Nav to=\"/login\" $active={location.pathname === \"/login\"}>\n            登入\n          </Nav>\n        )}\n        {!user && (\n          <Nav to=\"/register\" $active={location.pathname === \"/register\"}>\n            註冊\n          </Nav>\n        )}\n        {user && <Nav onClick={handleLogout}>登出</Nav>}\n      </NavbarList>\n    </HeaderContainer>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport LoginPage from \"../../pages/LoginPage\";\nimport HomePage from \"../../pages/HomePage\";\nimport RegisterPage from \"../../pages/RegisterPage\";\nimport AboutPage from \"../../pages/AboutPage\";\nimport SinglePage from \"../../pages/SinglePage\";\nimport NewPostPage from \"../../pages/NewPostPage\";\nimport EditPostPage from \"../../pages/EditPostPage\";\nimport Header from \"../Header\";\nimport { getUser } from \"../../redux/reducers/userReducer\";\nimport { getAuthToken } from \"../../utils\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Root = styled.div`\n  padding-top: 64px;\n  background: #eecfd438;\n  width: 100%;\n  height: 100vh;\n`;\n\nexport default function App() {\n  const user = useSelector((store) => store.users.user);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (getAuthToken()) {\n      dispatch(getUser);\n    }\n  }, [dispatch]);\n\n  return (\n    <Root>\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route exact path=\"/posts/:id\">\n            <SinglePage />\n          </Route>\n          <Route path=\"/new-post\">{user && <NewPostPage />}</Route>\n          <Route path=\"/edit/:id\">{user && <EditPostPage />}</Route>\n          <Route path=\"/about\">\n            <AboutPage />\n          </Route>\n          <Route path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route path=\"/register\">\n            <RegisterPage />\n          </Route>\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n    </Root>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport postReducer from \"./reducers/postReducer\";\nimport userReducer from \"./reducers/userReducer\";\n\nexport default configureStore({\n  reducer: {\n    posts: postReducer,\n    users: userReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { ThemeProvider } from \"styled-components\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nconst theme = {\n  colors: {\n    primary_300: \"#3333dd\",\n    primary_400: \"#e33e3e\",\n    primary_500: \"#af0505\",\n    primary_blue: \"aquamarine\",\n  },\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}